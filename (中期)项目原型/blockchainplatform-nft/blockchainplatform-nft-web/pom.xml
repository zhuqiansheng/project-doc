<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>blockchainplatform-nft</artifactId>
        <groupId>net.shengjian</groupId>
        <version>6.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>blockchainplatform-nft-web</artifactId>

    <dependencies>
        <dependency>
            <groupId>net.shengjian</groupId>
            <artifactId>blockchainplatform-nft-serviceimpl</artifactId>
            <version>6.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>net.shengjian</groupId>
            <artifactId>blockchainplatform-system-web</artifactId>
            <version>6.0.0-SNAPSHOT</version>
        </dependency>
        <!--测试依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>4.3.15.RELEASE</version>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>
    <build>
        <plugins>
            <!-- 忽略测试类 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- 使用maven package命令进行,代码混淆 ,项目类型必须是jar,如果是war有时会报错.-->
            <!--
             <plugin>
                 <groupId>com.github.wvengen</groupId>
                 <artifactId>proguard-maven-plugin</artifactId>
                 <version>${proguard-maven-plugin.version}</version>
                 <executions>
                     <execution>
                         <phase>package</phase>
                         <goals>
                             <goal>proguard</goal>
                         </goals>
                     </execution>
                 </executions>
                 <configuration>
                 <proguardVersion>${proguard.version}</proguardVersion>
                 <proguardInclude>${basedir}/src/main/resources/proguard.conf</proguardInclude>
                     <attach>true</attach>
                     <obfuscate>true</obfuscate>
                     <attachArtifactClassifier>pg</attachArtifactClassifier>
                     <outjar>${finalName}-pg</outjar>
                     <libs>
                         <lib>${java.home}/lib/rt.jar</lib>
                     </libs>
                 </configuration>
                  <dependencies>
                     <dependency>
                         <groupId>net.sf.proguard</groupId>
                         <artifactId>proguard-base</artifactId>
                         <version>${proguard.version}</version>
                     </dependency>
                 </dependencies>
             </plugin>
             -->
            <plugin>
                <groupId>com.github.shalousun</groupId>
                <artifactId>smart-doc-maven-plugin</artifactId>
                <version>${smart-doc-maven-plugin.version}</version>
                <configuration>
                    <!--指定生成文档的使用的配置文件,配置文件放在自己的项目中-->
                    <configFile>./src/main/resources/smart-doc.json</configFile>
                    <!--指定项目名称-->
                    <projectName>${project.description}-API文档</projectName>
                    <!--smart-doc实现自动分析依赖树加载第三方依赖的源码，如果一些框架依赖库加载不到导致报错，这时请使用excludes排除掉-->
                    <excludes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <exclude>com.alibaba:fastjson</exclude>
                    </excludes>
                    <!--自1.0.8版本开始，插件提供includes支持-->
                    <!--smart-doc能自动分析依赖树加载所有依赖源码，原则上会影响文档构建效率，因此你可以使用includes来让插件加载你配置的组件-->
                    <includes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <include>com.alibaba:fastjson</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <!--如果不需要在执行编译时启动smart-doc，则将phase注释掉-->
                        <phase>compile</phase>
                        <goals>
                            <!--smart-doc提供了html、openapi、markdown、torna-rest等goal，可按需配置-->
                            <goal>torna-rest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 纯java类的jar包时不要设置-->
            <!-- 例如 blockchainplatform-mytest-web 模块引用了 blockchainplatform-industrybrain-web ,blockchainplatform-industrybrain-web就不需要使用spring boot模式打包了,注释掉这个插件,打包成普通的jar文件  -->
            <!-- 需要注意:只能有一个@SpringBootApplication入口文件,需要把 blockchainplatform-industrybrain-web 中的 @SpringBootApplication等 注释掉 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>